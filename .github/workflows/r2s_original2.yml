name: r2s 官版friendlywrt

on:
  push:
    branches: 
      - master
    paths: 
      - 'JUNK/r2s.config.seed'
      - '.github/workflows/r2s_original2.yml'
  schedule:
    - cron: '30 16 * * 6'

jobs:

  build:
    
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
      
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get -y install bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Init Source
        run: |
          mkdir friendlywrt-rk3328
          cd friendlywrt-rk3328
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.1 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          
      - name: Mods
        run: |
          cd friendlywrt-rk3328
          #rm -f .repo/manifests/rk3328.xml
          #cp ../JUNK/rk3328.xml .repo/manifests/rk3328.xml
          repo sync -c  --no-clone-bundle
          #. ../remove_unused_config.sh
          #. ../patch_dosth.sh
          #sed -i 's/CONFIG_BPFILTER=y/CONFIG_BPFILTER=n/' kernel/arch/arm64/configs/nanopi-r2_linux_defconfig
          sed -i 's/dnsmasq /dnsmasq-full /' friendlywrt/include/target.mk
          #cp ../JUNK/r2s.config.seed configs/config_rk3328
          sed -i '/adblock/d' configs/config_rk3328 >/dev/null 2>&1
          echo '
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_usbutils=y
          CONFIG_PACKAGE_pv=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_losetup=y
          CONFIG_PACKAGE_zstd=y
          CONFIG_PACKAGE_check-network=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-app-adbyby-plus=y
          CONFIG_PACKAGE_luci-app-r2sflasher=y
          CONFIG_PACKAGE_luci-app-autorewan=y
          CONFIG_PACKAGE_luci-theme-argon=y
          ' >> configs/config_rk3328
          cd friendlywrt
          mv ../../scripts/one_time_init.sh package/base-files/files/usr/bin && sed -i '/exit/i\/bin/sh /usr/bin/one_time_init.sh 1 &' package/base-files/files/etc/rc.local
          echo -e '\nMr.K Build\n' >> package/base-files/files/etc/banner

      - name: Clean Feeds
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/feeds clean -a

      - name: Add Luci-theme-argon
        run: |
          mkdir -p friendlywrt-rk3328/friendlywrt/package/lean/ || echo ""
          rm -rf friendlywrt-rk3328/friendlywrt/package/lean/luci-theme-argon || echo ""
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          mv -f luci-theme-argon friendlywrt-rk3328/friendlywrt/package/lean/

      - name: Add Luci-app-r2sflasher
        run: |
          git clone -b master --single-branch https://github.com/kongfl888/luci-app-r2sflasher.git
          mv luci-app-r2sflasher friendlywrt-rk3328/friendlywrt/package

      - name: Add Luci-app-autorewan
        run: |
          git clone -b master --single-branch https://github.com/kongfl888/luci-app-autorewan.git
          mv luci-app-autorewan friendlywrt-rk3328/friendlywrt/package

      - name: Add check-network
        run: |
          git clone -b master --single-branch https://github.com/kongfl888/check-network.git
          mv check-network friendlywrt-rk3328/friendlywrt/package

      - name: Update Feeds
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Build FriendlyWrt
        run: |
          cd friendlywrt-rk3328
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          ./build.sh nanopi_r2s.mk

      - name: Zip Files
        run: |
          gzip friendlywrt-rk3328/out/*.img
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./r2srom/
          mkdir -p ./r2srom/
          mv friendlywrt-rk3328/out/*img* ./r2srom/
          cp friendlywrt-rk3328/friendlywrt/.config ./r2srom/
          cd ./r2srom/
          sha256sum *img* > sha256sum.txt
          cd ..
          mkdir -p ./r2srom/ipk/
          . ./scripts/copyipk.sh
          cd ./r2srom/ipk/
          sha256sum *ipk > packages.sha256
          cd ../../
          cp ./README.txt ./r2srom/
          zip -r artifact.zip ./r2srom/
          release_tag="R2S-Original2-$(date +%Y-%m-%d-%H)"
          echo "##[set-output name=release_tag;]$release_tag"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip
